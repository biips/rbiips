% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biips-object.r
\name{biips-object}
\alias{biips}
\alias{biips-object}
\alias{biips_build_sampler}
\alias{biips_build_sampler.biips}
\alias{biips_nodes}
\alias{biips_nodes.biips}
\alias{biips_print_dot}
\alias{biips_print_dot.biips}
\alias{biips_variable_names}
\alias{biips_variable_names.biips}
\alias{is.biips}
\alias{print.biips}
\alias{variable.names.biips}
\title{Manipulate biips model objects.}
\usage{
is.biips(object)

\method{print}{biips}(x, ...)

\method{biips_variable_names}{biips}(object, ...)

\method{variable.names}{biips}(object, ...)

\method{biips_nodes}{biips}(object, type, observed, ...)

\method{biips_print_dot}{biips}(object, file, ...)

\method{biips_build_sampler}{biips}(object, proposal = "auto", ...)
}
\arguments{
\item{object, x}{\code{biips} model object as returned by
\code{\link{biips_model}}.}

\item{...}{Additional arguments to be passed to default methods.}

\item{type}{string. Return only a specific type of node. Possible values
are \code{'const'}, \code{'logic'} or \code{'stoch'}. Default returns all
types of nodes.}

\item{observed}{logical. Return only observed or unobserved nodes. Default
returns all.}

\item{file}{string. Path of the output file.}

\item{proposal}{string. The type of proposal used by the SMC algorithm.
Possible values are \code{'auto'} and \code{'prior'}. \code{'auto'} selects the
best sampler among available ones automatically. \code{'prior'} forces
asignment of the prior sampler to every node. \code{'prior'} switches off
lots of instructions and can speed up the startup of the SMC for large
models. (default = \code{'auto'}).}
}
\value{
The function \code{is.biips} returns \code{TRUE} if the object is of
  class \code{biips}.

The method \code{biips_variable_names} returns a character vector.
  Names of node arrays used in the model.

The method \code{variable.names} is an alias for
  \code{biips_variable_names}.

The method \code{biips_nodes} returns a \code{data.frame} with a row
  for each node of the graphical model sorted in a topological order with the
  following columns:
  \item{id}{integer. node ids.}
  \item{name}{string. node names.}
  \item{type}{string. node types (\code{'const'}, \code{'logic'} or
    \code{'stoch'}).}
  \item{observed}{logical. \code{TRUE} if the node is observed.}
  \item{discrete}{logical. \code{TRUE} if the node is discrete.}

  If the function is called after the sampler is built (by calling
  \code{\link{biips_build_sampler}} or \code{\link{biips_smc_samples}}), it
  will also contain the additional variables:

  \item{iteration}{integer. node sampling iteration of unobserved nodes,
    starting at 0. \code{NA} if the node if observed.}
  \item{sampler}{string. node sampler name for stochastic unobserved
    nodes. An empty string for other types of nodes. }

The method \code{biips_print_dot} prints the graph in a file in dot
  format.

The method \code{biips_build_sampler} returns \code{NULL}.
}
\description{
A \code{biips} object is returned by function \code{\link{biips_model}}. It
represents a Bayesian graphical model described in BUGS language.

The method \code{biips_build_sampler} assigns a sampler to each node
of the graph. In order to specify the proposal used by the SMC
algorithm, this function has to be called before \code{\link{biips_smc_samples}}.
Otherwise, it will be automatically called by \code{\link{biips_smc_samples}}
with the default parameters.
}
\examples{
modelfile <- system.file('extdata', 'hmm.bug', package = 'rbiips')
stopifnot(nchar(modelfile) > 0)
cat(readLines(modelfile), sep = '\\n')

data <- list(tmax = 10, p = c(.5, .5), logtau_true = log(1), logtau = log(1))
model <- biips_model(modelfile, data, sample_data = TRUE)

#\dontrun{
#tmax <- 10
#p <- c(.5, .5)
#logtau_true <- log(1)
#logtau <- logtau_true

#datanames <- c('tmax', 'p', 'logtau_true', 'logtau')
#model <- biips_model(modelfile, datanames, sample_data = TRUE)
#}

is.biips(model)
print(model)

model$data()

variable.names(model)
biips_variable_names(model)

biips_nodes(model)

#\dontrun{
#dotfile <- 'hmm.dot'
#biips_print_dot(model, dotfile)
#cat(readLines(dotfile), sep = '\\n')
#}

biips_build_sampler(model, proposal = 'prior')
biips_nodes(model, type = 'stoch', observed = FALSE)

biips_build_sampler(model, proposal = 'auto')
biips_nodes(model, type = 'stoch', observed = FALSE)
}
\seealso{
\code{\link{biips_model}}
}

