% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pimh.r
\name{biips_pimh_init}
\alias{biips_pimh_init}
\title{Create a PIMH object.}
\usage{
biips_pimh_init(model, variable_names)
}
\arguments{
\item{model}{\code{biips} model object as returned by
\code{\link{biips_model}}.}

\item{variable_names}{character vector. The names of the unobserved
variables to monitor. Names can contain subset indices which must define a
valid subset of the variables of the model, e.g.: \code{c('var1',}
\code{'var2[1]',} \code{'var3[1:10]',} \code{'var4[1, 5:10, 3]')}.}
}
\value{
The function \code{biips_pimh_init} returns an object of class
  \code{pimh} which can be used to generate samples
  from the posterior distribution of the monitored variables in
  \code{variable_names}.

  An object of class \code{pimh} is a list of functions that share a common
  environment. These functions are meant for internal purpose only. They are
  used to query information on the current state of the algorithm.
  \item{model()}{Get the \code{\link{biips}} model object.}
  \item{variable_names()}{Get a character vector with the names of
      the monitored variables.}
  \item{sample(sample)}{Get and set the current sample.}
  \item{log_marg_like(log_marg_like)}{Get and set the current value
      of the log marginal likelihood.}
}
\description{
The function \code{biips_pimh_init} initializes the Particle Independent
Metropolis-Hastings (PIMH) algorithm.

The PIMH algorithm provides MCMC samples of the variables in \code{variable_names},
using a SMC algorithm as proposal distribution in an independent
Metropolis-Hastings (MH) algorithm.
}
\examples{
modelfile <- system.file('extdata', 'hmm.bug', package = 'rbiips')
stopifnot(nchar(modelfile) > 0)
cat(readLines(modelfile), sep = '\\n')

data <- list(tmax = 10, p = c(.5, .5), logtau_true = log(1), logtau = log(1))
model <- biips_model(modelfile, data)

n_part <- 50
obj_pimh <- biips_pimh_init(model, c('x', 'c[2:10]'))  # Initialize
is.pimh(obj_pimh)
out_pimh_burn <- biips_pimh_update(obj_pimh, 100, n_part)  # Burn-in
out_pimh <- biips_pimh_samples(obj_pimh, 100, n_part)  # Samples
}
\seealso{
\code{\link{biips_model}}, \code{\link{biips_pimh_update}},
  \code{\link{biips_pimh_samples}}
}
