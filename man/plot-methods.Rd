% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-methods.r
\name{plot-methods}
\alias{plot-methods}
\alias{plot.density.mcmcarray}
\alias{plot.density.mcmcarray.list}
\alias{plot.density.mcmcarray.univariate}
\alias{plot.density.smcarray}
\alias{plot.density.smcarray.fsb}
\alias{plot.density.smcarray.fsb.list}
\alias{plot.density.smcarray.fsb.univariate}
\alias{plot.histogram.mcmcarray}
\alias{plot.histogram.mcmcarray.list}
\alias{plot.table.mcmcarray}
\alias{plot.table.mcmcarray.list}
\alias{plot.table.smcarray}
\alias{plot.table.smcarray.fsb}
\alias{plot.table.smcarray.fsb.list}
\alias{plot.table.smcarray.fsb.univariate}
\title{Plot methods.}
\usage{
\method{plot}{density.smcarray.fsb.univariate}(x, type = "l", col = 1:6,
  pch = NULL, lwd = NULL, lty = NULL, main = NULL, xlab = NULL,
  ylab = "Density", xlim = range(unlist(lapply(x, function(x) x$x))),
  ylim = c(0, max(unlist(lapply(x, function(x) x$y)))), ...)

\method{plot}{table.smcarray.fsb.univariate}(x, type = "h", col = 1:6,
  pch = NULL, lwd = 2, lty = NULL, main = NULL, xlab = NULL,
  ylab = "Probability", xlim, ylim = c(0, max(unlist(x))), width = 0.1,
  ...)

\method{plot}{density.smcarray}(x, main = NULL, xlab = NULL,
  ylab = "Density", ...)

\method{plot}{table.smcarray}(x, main = NULL, xlab = NULL,
  ylab = "Probability", ...)

\method{plot}{density.smcarray.fsb}(x, main = NULL, xlab = NULL,
  ylab = "Density", ...)

\method{plot}{table.smcarray.fsb}(x, main = NULL, xlab = NULL,
  ylab = "Probability", ...)

\method{plot}{density.smcarray.fsb.list}(x, main = NULL, xlab = NULL,
  ylab = "Density", ...)

\method{plot}{table.smcarray.fsb.list}(x, main = NULL, xlab = NULL,
  ylab = "Probability", ...)

\method{plot}{table.mcmcarray}(x, main = NULL, xlab = NULL,
  ylab = "Probability", ...)

\method{plot}{density.mcmcarray.univariate}(x, type = "l",
  main = x$data.name, ...)

\method{plot}{density.mcmcarray}(x, main = NULL, xlab = NULL, ...)

\method{plot}{histogram.mcmcarray}(x, main = NULL, xlab = NULL, ...)

\method{plot}{table.mcmcarray.list}(x, main = NULL, xlab = NULL, ...)

\method{plot}{density.mcmcarray.list}(x, main = NULL, xlab = NULL,
  ylab = "Density", ...)

\method{plot}{histogram.mcmcarray.list}(x, main = NULL, xlab = NULL, ...)
}
\arguments{
\item{x}{a density object.}

\item{type, col, pch, lwd, lty}{plotting parameters with useful defaults.}

\item{main, xlab, ylab}{plotting parameters with useful defaults.}

\item{xlim, ylim}{plotting parameters with useful defaults.}

\item{...}{further plotting parameters. See
\code{\link[stats]{plot.density}}, \code{\link[graphics]{plot.histogram}},
\code{\link[graphics]{plot.table}}}

\item{width}{real. width of spacing for bars at the same value.}
}
\value{
\code{NULL}
}
\description{
Plot methods.
}
\examples{
#' # Compile model
modelfile <- system.file('extdata', 'hmm_f.bug', package = 'rbiips')
stopifnot(nchar(modelfile) > 0)
cat(readLines(modelfile), sep = '\\n')

data <- list(tmax = 10, p = c(.5, .5), logtau_true = log(1), logtau = log(1))
model <- biips_model(modelfile, data, sample_data = TRUE)

#' # SMC algorithm
n_part <- 100
out_smc <- biips_smc_samples(model, c('x', 'c[2:10]'), n_part, type = 'fs',
                             rs_thres = 0.5, rs_type = 'stratified')

par(mfrow = c(2, 2))
plot(biips_density(out_smc$x, bw = 'nrd0', adjust = 1, n = 100))
plot(biips_table(out_smc[['c[2:10]']]))
plot(biips_density(out_smc$x$f))
plot(biips_table(out_smc[['c[2:10]']]$f))

#' # PIMH algorithm
n_part <- 50
obj_pimh <- biips_pimh_init(model, c('x', 'c[2:10]'))  # Initialize
out_pimh_burn <- biips_pimh_update(obj_pimh, 100, n_part)  # Burn-in
out_pimh <- biips_pimh_samples(obj_pimh, 100, n_part)  # Samples

par(mfrow = c(2, 2))
plot(biips_density(out_pimh$x))
plot(biips_table(out_pimh[['c[2:10]']]))

#' # PMMH algorithm
data <- list(tmax = 10, p = c(.5, .5), logtau_true = log(1))
model <- biips_model(modelfile, data)

n_part <- 50
obj_pmmh <- biips_pmmh_init(model, 'logtau', latent_names = c('x', 'c[2:10]'),
                            inits = list(logtau = -2))  # Initialize
out_pmmh_burn <- biips_pmmh_update(obj_pmmh, 100, n_part)  # Burn-in
out_pmmh <- biips_pmmh_samples(obj_pmmh, 100, n_part, thin = 1)  # Samples

plot(biips_density(out_pmmh$logtau))
par(mfrow = c(2, 2))
plot(biips_density(out_pmmh$x))
plot(biips_table(out_pmmh[['c[2:10]']]))
}
\seealso{
\code{\link[stats]{plot.density}},
  \code{\link[graphics]{plot.histogram}}, \code{\link[graphics]{plot.table}}
}

